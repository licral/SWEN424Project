package HTMLmodel.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.TransformationMenu;
import jetbrains.mps.openapi.editor.descriptor.NamedMenuId;
import java.util.Arrays;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (index_xbvbvu_a0a.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new aNode_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new bodyNode_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new classNode_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new divNode_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new headNode_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new hrefNode_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new idNode_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new linkNode_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new newlineNode_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new pNode_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new relNode_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new styleNode_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new textNode_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new titleNode_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new typeNode_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new webpageNode_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new websiteNode_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<TransformationMenu> getDeclaredNamedTransformationMenus(NamedMenuId menuId) {
    SAbstractConcept cncpt = (SAbstractConcept) menuId.getConcept();
    switch (index_xbvbvu_a0d.index(cncpt)) {
      case 0:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0a1a3, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new TransformationMenu[]{new newelement()});
            default:
          }
        }
        break;
      default:
    }

    return Collections.<TransformationMenu>emptyList();
  }

  private static final ConceptSwitchIndex index_xbvbvu_a0a = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x3ed3d0b21a3053cbL), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b105fL), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106eL), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106bL), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b105bL), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1068L), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106fL), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1065L), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1071L), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106cL), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1067L), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106dL), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1070L), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1061L), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1069L), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b0fbeL), MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x3ed3d0b21a2aa6c8L)).seal();
  private static final ConceptSwitchIndex index_xbvbvu_a0d = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1070L)).seal();
  private static String[] stringSwitchCases_xbvbvu_a0a0a0a1a3 = new String[]{"HTMLmodel.editor.newelement"};
}
