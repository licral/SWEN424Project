package HTMLmodel.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptattributeInterface = createDescriptorForattributeInterface();
  /*package*/ final ConceptDescriptor myConceptbodyNode = createDescriptorForbodyNode();
  /*package*/ final ConceptDescriptor myConceptclassNode = createDescriptorForclassNode();
  /*package*/ final ConceptDescriptor myConceptdivNode = createDescriptorFordivNode();
  /*package*/ final ConceptDescriptor myConceptelementInterface = createDescriptorForelementInterface();
  /*package*/ final ConceptDescriptor myConceptheadNode = createDescriptorForheadNode();
  /*package*/ final ConceptDescriptor myConcepthrefNode = createDescriptorForhrefNode();
  /*package*/ final ConceptDescriptor myConceptidNode = createDescriptorForidNode();
  /*package*/ final ConceptDescriptor myConceptlinkNode = createDescriptorForlinkNode();
  /*package*/ final ConceptDescriptor myConceptmetadataInterface = createDescriptorFormetadataInterface();
  /*package*/ final ConceptDescriptor myConceptnewlineNode = createDescriptorFornewlineNode();
  /*package*/ final ConceptDescriptor myConceptpNode = createDescriptorForpNode();
  /*package*/ final ConceptDescriptor myConceptrelNode = createDescriptorForrelNode();
  /*package*/ final ConceptDescriptor myConceptstyleNode = createDescriptorForstyleNode();
  /*package*/ final ConceptDescriptor myConcepttextNode = createDescriptorFortextNode();
  /*package*/ final ConceptDescriptor myConcepttitleNode = createDescriptorFortitleNode();
  /*package*/ final ConceptDescriptor myConcepttypeNode = createDescriptorFortypeNode();
  /*package*/ final ConceptDescriptor myConceptwebpageNode = createDescriptorForwebpageNode();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptattributeInterface, myConceptbodyNode, myConceptclassNode, myConceptdivNode, myConceptelementInterface, myConceptheadNode, myConcepthrefNode, myConceptidNode, myConceptlinkNode, myConceptmetadataInterface, myConceptnewlineNode, myConceptpNode, myConceptrelNode, myConceptstyleNode, myConcepttextNode, myConcepttitleNode, myConcepttypeNode, myConceptwebpageNode);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.attributeInterface:
        return myConceptattributeInterface;
      case LanguageConceptSwitch.bodyNode:
        return myConceptbodyNode;
      case LanguageConceptSwitch.classNode:
        return myConceptclassNode;
      case LanguageConceptSwitch.divNode:
        return myConceptdivNode;
      case LanguageConceptSwitch.elementInterface:
        return myConceptelementInterface;
      case LanguageConceptSwitch.headNode:
        return myConceptheadNode;
      case LanguageConceptSwitch.hrefNode:
        return myConcepthrefNode;
      case LanguageConceptSwitch.idNode:
        return myConceptidNode;
      case LanguageConceptSwitch.linkNode:
        return myConceptlinkNode;
      case LanguageConceptSwitch.metadataInterface:
        return myConceptmetadataInterface;
      case LanguageConceptSwitch.newlineNode:
        return myConceptnewlineNode;
      case LanguageConceptSwitch.pNode:
        return myConceptpNode;
      case LanguageConceptSwitch.relNode:
        return myConceptrelNode;
      case LanguageConceptSwitch.styleNode:
        return myConceptstyleNode;
      case LanguageConceptSwitch.textNode:
        return myConcepttextNode;
      case LanguageConceptSwitch.titleNode:
        return myConcepttitleNode;
      case LanguageConceptSwitch.typeNode:
        return myConcepttypeNode;
      case LanguageConceptSwitch.webpageNode:
        return myConceptwebpageNode;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForattributeInterface() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "attributeInterface", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L);
    b.interface_();
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285990");
    b.prop("name", 0x69f2237cf23b10a8L, "7634203337893286056");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForbodyNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "bodyNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b105fL);
    b.class_(false, false, false);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285983");
    b.aggregate("elements", 0x69f2237cf23b10abL).target(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106aL).optional(true).ordered(true).multiple(true).origin("7634203337893286059").done();
    b.alias("body");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForclassNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "classNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106eL);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285998");
    b.alias("class");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFordivNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "divNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106bL);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106aL);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285995");
    b.aggregate("attributes", 0x69f2237cf23b10aeL).target(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L).optional(true).ordered(true).multiple(true).origin("7634203337893286062").done();
    b.aggregate("elements", 0x69f2237cf23b10b1L).target(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106aL).optional(true).ordered(true).multiple(true).origin("7634203337893286065").done();
    b.alias("div");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForelementInterface() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "elementInterface", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106aL);
    b.interface_();
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285994");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForheadNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "headNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b105bL);
    b.class_(false, false, false);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285979");
    b.aggregate("metadata", 0x69f2237cf23b107aL).target(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1060L).optional(true).ordered(true).multiple(true).origin("7634203337893286010").done();
    b.alias("head");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForhrefNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "hrefNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1068L);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285992");
    b.alias("href");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForidNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "idNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106fL);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285999");
    b.alias("id");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForlinkNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "linkNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1065L);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1060L);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285989");
    b.aggregate("attributes", 0x69f2237cf23b1093L).target(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L).optional(true).ordered(true).multiple(true).origin("7634203337893286035").done();
    b.alias("link");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFormetadataInterface() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "metadataInterface", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1060L);
    b.interface_();
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285984");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFornewlineNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "newlineNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1071L);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893286001");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForpNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "pNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106cL);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106aL);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285996");
    b.aggregate("attributes", 0x69f2237cf23b10c8L).target(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L).optional(true).ordered(true).multiple(true).origin("7634203337893286088").done();
    b.alias("p");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForrelNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "relNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1067L);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285991");
    b.alias("rel");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForstyleNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "styleNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b106dL);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285997");
    b.prop("property", 0x207ab1255dd8d16bL, "2340377730418790763");
    b.prop("value", 0x207ab1255dd8d16dL, "2340377730418790765");
    b.alias("style");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFortextNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "textNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1070L);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893286000");
    b.alias("text");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFortitleNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "titleNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1061L);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1060L);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285985");
    b.prop("name", 0x69f2237cf23b1062L, "7634203337893285986");
    b.aggregate("attributes", 0x69f2237cf23b1084L).target(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L).optional(true).ordered(true).multiple(false).origin("7634203337893286020").done();
    b.alias("title");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFortypeNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "typeNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1069L);
    b.class_(false, false, false);
    b.parent(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b1066L);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285993");
    b.alias("type");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForwebpageNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HTMLmodel", "webpageNode", 0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b0fbeL);
    b.class_(false, false, true);
    b.origin("r:2f44e61d-11b9-4283-84e2-b50d2d76e6ff(HTMLmodel.structure)/7634203337893285822");
    b.aggregate("head", 0x69f2237cf23b1072L).target(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b105bL).optional(true).ordered(true).multiple(false).origin("7634203337893286002").done();
    b.aggregate("body", 0x69f2237cf23b1075L).target(0x6f2104b7c2144023L, 0xa13f2bec55d0d35aL, 0x69f2237cf23b105fL).optional(true).ordered(true).multiple(false).origin("7634203337893286005").done();
    b.alias("html");
    return b.create();
  }
}
