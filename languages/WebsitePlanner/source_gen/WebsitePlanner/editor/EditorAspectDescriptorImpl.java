package WebsitePlanner.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.TransformationMenu;
import jetbrains.mps.openapi.editor.descriptor.NamedMenuId;
import java.util.Arrays;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (index_xbvbvu_a0a.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Head_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Link_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new NewLineNode_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Reference_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Type_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Webpage_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<TransformationMenu> getDeclaredNamedTransformationMenus(NamedMenuId menuId) {
    SAbstractConcept cncpt = (SAbstractConcept) menuId.getConcept();
    switch (index_xbvbvu_a0d.index(cncpt)) {
      case 0:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0a1a3, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new TransformationMenu[]{new addAttributes()});
            default:
          }
        }
        break;
      case 1:
        if (true) {
          switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0b1a3, menuId.getFqName())) {
            case 0:
              return Arrays.asList(new TransformationMenu[]{new SwapNewLine()});
            default:
          }
        }
        break;
      default:
    }

    return Collections.<TransformationMenu>emptyList();
  }

  private static final ConceptSwitchIndex index_xbvbvu_a0a = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x50c94d2ca8c72382L), MetaIdFactory.conceptId(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x50c94d2ca8c73686L), MetaIdFactory.conceptId(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x725ca71db780d6e6L), MetaIdFactory.conceptId(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x725ca71db77e4301L), MetaIdFactory.conceptId(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x725ca71db7881f30L), MetaIdFactory.conceptId(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x50c94d2ca8c723bbL)).seal();
  private static final ConceptSwitchIndex index_xbvbvu_a0d = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x50c94d2ca8c73686L), MetaIdFactory.conceptId(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x725ca71db780d6e6L)).seal();
  private static String[] stringSwitchCases_xbvbvu_a0a0a0a1a3 = new String[]{"WebsitePlanner.editor.addAttributes"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0b1a3 = new String[]{"WebsitePlanner.editor.SwapNewLine"};
}
