package WebsitePlanner.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.transformation.TransformationMenuBase;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.lang.editor.menus.transformation.MenuLocations;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuItem;
import jetbrains.mps.openapi.editor.menus.transformation.TransformationMenuContext;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.editor.menus.SingleItemMenuPart;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.openapi.editor.menus.transformation.ActionItemBase;
import jetbrains.mps.nodeEditor.cellMenu.SideTransformCompletionActionItem;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class addAttributes extends TransformationMenuBase {
  private final Set<String> myLocations = SetSequence.fromSetAndArray(new HashSet<String>(), MenuLocations.RIGHT_SIDE_TRANSFORM);
  @Override
  public boolean isApplicableToLocation(@NotNull String location) {
    return SetSequence.fromSet(myLocations).contains(location);
  }

  @Override
  @NotNull
  protected List<MenuPart<TransformationMenuItem, TransformationMenuContext>> getParts(TransformationMenuContext _context) {
    List<MenuPart<TransformationMenuItem, TransformationMenuContext>> result = new ArrayList<MenuPart<TransformationMenuItem, TransformationMenuContext>>();
    if (ListSequence.fromListAndArray(new ArrayList<String>(), MenuLocations.RIGHT_SIDE_TRANSFORM).contains(_context.getMenuLocation())) {
      result.add(new addAttributes.TMP_Action_3ipxm4_a0());
      result.add(new addAttributes.TMP_Action_3ipxm4_b0());
    }
    return result;
  }

  private class TMP_Action_3ipxm4_a0 extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
    @Nullable
    protected TransformationMenuItem createItem(TransformationMenuContext context) {
      return new addAttributes.TMP_Action_3ipxm4_a0.Item(context);
    }

    private class Item extends ActionItemBase implements SideTransformCompletionActionItem {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "href";
      }

      @Override
      public void execute(@NotNull String pattern) {
        SLinkOperations.setTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x50c94d2ca8c73686L, 0x725ca71db77e441bL, "href"), SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x725ca71db77e4301L, "WebsitePlanner.structure.Reference")));
      }


    }
  }
  private class TMP_Action_3ipxm4_b0 extends SingleItemMenuPart<TransformationMenuItem, TransformationMenuContext> {
    @Nullable
    protected TransformationMenuItem createItem(TransformationMenuContext context) {
      return new addAttributes.TMP_Action_3ipxm4_b0.Item(context);
    }

    private class Item extends ActionItemBase implements SideTransformCompletionActionItem {
      private final TransformationMenuContext _context;

      private Item(TransformationMenuContext context) {
        _context = context;
      }

      @Nullable
      @Override
      public String getLabelText(String pattern) {
        return "type";
      }

      @Override
      public void execute(@NotNull String pattern) {
        SLinkOperations.setTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x50c94d2ca8c73686L, 0x725ca71db7881f2bL, "type"), SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xb05d5b3ef2c14fe3L, 0x803e2c0226d1a19cL, 0x725ca71db7881f30L, "WebsitePlanner.structure.Type")));
      }


    }
  }
}
