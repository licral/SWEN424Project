package WebsitePlanner.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_Body = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Div = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Element = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Head = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Link = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_NewLineNode = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Reference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Text = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Type = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Webpage = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Website = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Body:
        return props_Body;
      case LanguageConceptSwitch.Div:
        return props_Div;
      case LanguageConceptSwitch.Element:
        return props_Element;
      case LanguageConceptSwitch.Head:
        return props_Head;
      case LanguageConceptSwitch.Link:
        return props_Link;
      case LanguageConceptSwitch.NewLineNode:
        return props_NewLineNode;
      case LanguageConceptSwitch.Reference:
        return props_Reference;
      case LanguageConceptSwitch.Text:
        return props_Text;
      case LanguageConceptSwitch.Type:
        return props_Type;
      case LanguageConceptSwitch.Webpage:
        return props_Webpage;
      case LanguageConceptSwitch.Website:
        return props_Website;
    }
    return null;
  }
}
